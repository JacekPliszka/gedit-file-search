TODO
=====
- display somehow that search is still running
  - maybe animated icon for result tab?
  - or cylon-style progress bar?
- cleanup search dialog layout (convert to correct GTK layout)
- check encoding of grep output (ie. make sure the lines in result panel are in correct encoding)
- run tests:
  - search through / (or /usr or /usr/share) to find weird corner cases
  - I think there's a bug somewhere when searching through /usr/share on my system (xargs displays warnings)
  - there are also some cases where a result line displays more than one text line...
  - check that files in /testfiles cause no errors/warnings/wrong behavior:
  - testfiles/utf8-extract-1.bin (triggers a Pango warning): is probably this Python bug: http://bugs.python.org/issue3672
- implement Edit button in result panel
- fix counting of found matches (it currently counts found _lines_, but a line can contain multiple matches...)
- highlight found text in result panel (like, with yellow background for the actually matching text)
- for every result panel, somehow display search parameters (search text, directory)
  - maybe as tooltip for result tab?
  - or as first line in result list?
- maybe use single-click on result line to open file (instead of double click?)
- implement all the options in search dialog
- maybe improve search directory chooser in search dialog?
  - use some existing widget to choose directory?
- remember options (last search terms, last search directories, search options)
  - remember all this also over Gedit restart
- when opening search dialog, deduce initially-display search dir in a better way
  - it should do "the right thing" yet the user must be able to understand the decision-making way
  - kdevelop seems to do it quite right (at least it doesn't get in my way)
  - kate does it wrong (it uses the directory of currently-focused file, which sometimes surprises me as user)
  - expected behavior in example cases:
    - when starting search without ever having opened a file in that window since start: use current working dir (getcwd)
    - after having used File Search already: use same directory as last time
    - when starting gedit with a file on command line (like File Manager -> double click on text file): use directory of that file
  - note: if currently-focused file couldn't be loaded correctly, then don't use it's dir as search dir (because the dir might not exist...)
- check that activating/deactivating plugin works correctly and leaves no cruft behind
- check focus behavior of result list
- add keyboard shortcut for opening search dialog
- in list of recent dirs, normalize paths (currently same path may appear twice, once with trailing slash and once without, like "/tmp" and "/tmp/")
- publish initial version
- maybe limit line length in result list?
  - the result list widget fails to display very long lines (like 10000 chars) correctly anyway...
  - also, on older Gedit (2.16) apparently the whole result list is broken if a very long line is added
- add option to ignore backup files (files ending with ~ etc):
  - *.~
  - .#* (emacs backup files? or from CVS?)
  - test this with a real-life directory
- create test plan for testing the full functionality and all corner cases with a new release
- Gedit 2.16 quirks:
  - result list sometimes displays no more text (maybe caused by too long lines?)
- test searching through directories with many files, many directories, or big files or files with very long lines
- search dialog: maybe get list of files suffixes (*.C, *.py...) from Gedits internal syntax highlighting database?
- there might be a bug (race) in cancelling: if a new grep is started after I got the child PIDs of sh and before I kill find, that new grep process is probably never killed (?!)
- check that searching through binary files doesn't break the search output etc.
  - note: currently, if grep detects some file as binary (maybe because it mixes two encodings?), the file is ignored...
    - maybe there should be a way to inform the user about ignored files
- maybe implement some further (but probably not significant) performance improvements:
  - call updateSummary() less often (like after the loop in parseFragment())
  - similarly, lock (freeze) TreeStore when adding several rows at once
  - the GrepParser could probably be sped up a bit
- maybe implement "search for full words only" function to be consistent with normal Gedit search dialog?
- display warnings/errors (like "invalid search directory" etc) to the user instead of printing to stdout...
- add some shortcut (button, context menu...) to result panel for opening new search dialog
- implement maxEntries argument in RecentDirs ctor
- test on system with "weird" fonts (and english locale): if digits have different widths, the width of side bar in result panel might flicker...
  - seems to be fixed on recent systems (or with recent fonts): all digits now have similar width, so the width of the "N matches" text now doesn't change so often
- maybe add a "Replace" button to result panel (above Edit) which replaces all found occurences (like Find & Replace)
- in result list, there should probably be an easy way to get the file name for a line (if there are some hundred results in a file, it is apparently difficult to get to the file name row of these lines...)
- check that searching in directories with special files (devices/pipes/sockets...) is no problem
- maybe sort result files? By name?
- idea: maybe indent results to match file position in directory tree?
- check that files with tabs are no problem
- improve reading from pipe: start with small read buffer (100 bytes?), and increase it until a maximum is reached (4000 bytes?)
  -> goal: give results quickly yet read efficiently
- on rhel5, there are apparently bytes left to read in the pipe after we got the HUP signal (at least with buffer = 300 bytes)
  -> test this on other systems
  -> maybe, on close, try to read all remaining data from pipe until pipe is empty? Is that possible without blocking?
- test with file /usr/share/festival/voices/english/kal_diphone/group/kallpc8k.group (from festvox-kallpc8k package): on some systems, when searching for "abc", the following warning appears:
sys:1: GtkWarning: Failed to set text from markup due to error parsing markup: Error on line 1 char 64: Element 'markup' was closed, but the currently open element is 'span'
- for dropdown list of recent search terms: maybe use same list as in normal Gedit search dialog?
  - apparently gedit stores this list in /apps/gnome-settings/gedit/history-gedit2_search_for_entry
- search dialog: replace Cancel button with Close (to be consistent with normal Gedit search dialog)
- result panel: use correct singular forms for "N matches in M files" text
- maybe make result list insensitive if no matches were found?
- maybe put .glade and .py files into separate subdirectory in ~/.gnome2/gedit/plugins/ ?
- display better icon for plugin in Gedit -> Preferences -> Plugins
